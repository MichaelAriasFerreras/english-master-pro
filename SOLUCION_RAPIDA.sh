#!/bin/bash

# üöÄ Script de Soluci√≥n R√°pida para English Master Pro
# Este script te ayudar√° a resolver el problema del repositorio 404

echo "=================================================="
echo "üîç DIAGN√ìSTICO Y SOLUCI√ìN - English Master Pro"
echo "=================================================="
echo ""

# Colores para output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# Verificar que estamos en el directorio correcto
if [ ! -d ".git" ]; then
    echo -e "${RED}‚ùå Error: Este script debe ejecutarse desde el directorio del repositorio${NC}"
    exit 1
fi

echo -e "${BLUE}üìç Directorio actual:${NC} $(pwd)"
echo ""

# Paso 1: Verificar estado local
echo -e "${YELLOW}üìä PASO 1: Verificando estado del c√≥digo local...${NC}"
echo ""
git status
echo ""
echo -e "${GREEN}‚úÖ √öltimos commits:${NC}"
git log --oneline -5
echo ""

# Paso 2: Verificar archivos cr√≠ticos
echo -e "${YELLOW}üìã PASO 2: Verificando archivos cr√≠ticos...${NC}"
echo ""

files_to_check=(
    "app/api/health/route.ts"
    "app/api/auth/signup/route.ts"
    "lib/db.ts"
    "package.json"
    "prisma/schema.prisma"
)

all_files_exist=true
for file in "${files_to_check[@]}"; do
    if [ -f "$file" ]; then
        echo -e "${GREEN}‚úÖ${NC} $file"
    else
        echo -e "${RED}‚ùå${NC} $file ${RED}(FALTA)${NC}"
        all_files_exist=false
    fi
done
echo ""

if [ "$all_files_exist" = true ]; then
    echo -e "${GREEN}‚úÖ Todos los archivos cr√≠ticos est√°n presentes${NC}"
else
    echo -e "${RED}‚ö†Ô∏è  Algunos archivos cr√≠ticos faltan${NC}"
fi
echo ""

# Paso 3: Opciones de soluci√≥n
echo -e "${YELLOW}üéØ PASO 3: Opciones de Soluci√≥n${NC}"
echo ""
echo "Selecciona una opci√≥n:"
echo ""
echo "1) üîÑ Intentar push al repositorio existente (necesitas token v√°lido)"
echo "2) üÜï Preparar para push a repositorio nuevo"
echo "3) üöÄ Deploy directo con Vercel CLI"
echo "4) üåê Deploy directo con Netlify CLI"
echo "5) ‚ÑπÔ∏è  Ver informaci√≥n del repositorio remoto"
echo "6) ‚ùå Salir"
echo ""
read -p "Ingresa tu opci√≥n (1-6): " option

case $option in
    1)
        echo ""
        echo -e "${BLUE}üîÑ Opci√≥n 1: Push al repositorio existente${NC}"
        echo ""
        echo "Para hacer push, necesitas:"
        echo "1. Un token de GitHub con permisos 'repo'"
        echo "2. Ejecutar: git push -u origin main"
        echo ""
        read -p "¬øTienes un token v√°lido? (s/n): " has_token
        if [ "$has_token" = "s" ] || [ "$has_token" = "S" ]; then
            echo ""
            echo "Ejecuta este comando (reemplaza TOKEN con tu token):"
            echo ""
            echo -e "${GREEN}git remote set-url origin https://TOKEN@github.com/MichaelAriasFerreras/english-master-pro.git${NC}"
            echo -e "${GREEN}git push -u origin main${NC}"
        else
            echo ""
            echo "Crea un token en: https://github.com/settings/tokens"
            echo "Permisos necesarios: repo, workflow"
        fi
        ;;
    2)
        echo ""
        echo -e "${BLUE}üÜï Opci√≥n 2: Preparar para repositorio nuevo${NC}"
        echo ""
        echo "Pasos a seguir:"
        echo ""
        echo "1. Ve a: https://github.com/new"
        echo "2. Nombre: english-master-pro"
        echo "3. Visibilidad: P√∫blico"
        echo "4. NO inicialices con README"
        echo "5. Despu√©s de crear, ejecuta:"
        echo ""
        echo -e "${GREEN}git remote set-url origin https://github.com/MichaelAriasFerreras/english-master-pro.git${NC}"
        echo -e "${GREEN}git push -u origin main${NC}"
        ;;
    3)
        echo ""
        echo -e "${BLUE}üöÄ Opci√≥n 3: Deploy con Vercel CLI${NC}"
        echo ""
        echo "Instalando Vercel CLI..."
        npm install -g vercel
        echo ""
        echo "Ahora ejecuta:"
        echo -e "${GREEN}vercel login${NC}"
        echo "Luego:"
        echo -e "${GREEN}vercel --prod${NC}"
        ;;
    4)
        echo ""
        echo -e "${BLUE}üåê Opci√≥n 4: Deploy con Netlify CLI${NC}"
        echo ""
        echo "Instalando Netlify CLI..."
        npm install -g netlify-cli
        echo ""
        echo "Ahora ejecuta:"
        echo -e "${GREEN}netlify login${NC}"
        echo "Luego:"
        echo -e "${GREEN}netlify deploy --prod${NC}"
        ;;
    5)
        echo ""
        echo -e "${BLUE}‚ÑπÔ∏è  Informaci√≥n del repositorio remoto:${NC}"
        echo ""
        git remote -v
        echo ""
        echo "Configuraci√≥n actual:"
        cat .git/config | grep -A 2 "\[remote"
        ;;
    6)
        echo ""
        echo "üëã Saliendo..."
        exit 0
        ;;
    *)
        echo ""
        echo -e "${RED}‚ùå Opci√≥n inv√°lida${NC}"
        exit 1
        ;;
esac

echo ""
echo "=================================================="
echo "‚úÖ Script completado"
echo "=================================================="
echo ""
echo "üìö Para m√°s informaci√≥n, consulta:"
echo "   - DIAGNOSTICO_REPOSITORIO_404.md"
echo "   - PUSH_TO_GITHUB_INSTRUCTIONS.md"
echo ""
